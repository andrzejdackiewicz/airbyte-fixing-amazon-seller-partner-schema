version: "0.29.0"

definitions:
  schema_loader:
    type: JsonFileSchemaLoader
    file_path: "./source_pypi/schemas/{{ parameters['name'] }}.json"
  selector:
    extractor:
      field_path: []
  requester:
    url_base: "https://pypi.org"
    http_method: "GET"
    request_headers:
      User-Agent: "Airbyte"
      Accept: "application/json"
  retriever:
    record_selector:
      $ref: "#/definitions/selector"
    paginator:
      type: NoPagination
    requester:
      $ref: "#/definitions/requester"
  base_stream:
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      $ref: "#/definitions/retriever"

  project_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "project"
      path: "/pypi/{{ config['project_name'] }}/json"

  release_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "release"
      path: "/pypi/{{ config['project_name'] }}/{{ config['version'] }}/json"

  stats_stream:
    $ref: "#/definitions/base_stream"
    $parameters:
      name: "stats"
      path: "/stats"

streams:
  - "#/definitions/project_stream"
  - "#/definitions/release_stream"
  - "#/definitions/stats_stream"

check:
  stream_names:
    - "project"
    - "release"
    - "stats"
spec:
  type: Spec
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    title: Pypi Spec
    type: object
    required:
      - project_name
    additionalProperties: true
    properties:
      project_name:
        type: string
        title: PyPI Package
        description: >-
          Name of the project/package. Can only be in lowercase with hyphen.
          This is the name used using pip command for installing the package.
        examples:
          - sampleproject
      version:
        title: Package Version
        type: string
        description: >-
          Version of the project/package.  Use it to find a particular release instead of all releases.
        examples:
          - 1.2.0
  documentation_url: https://docs.airbyte.io/integrations/sources/pypi
