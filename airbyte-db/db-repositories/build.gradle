plugins {
//    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.minimal.application") version "3.6.3"
    id("io.micronaut.test-resources") version "3.6.3"
}

repositories {
    mavenCentral()
}

micronaut {
    version = "3.7.4"
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation project(':airbyte-config:config-models')
    implementation project(':airbyte-config:config-persistence')
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
//    annotationProcessor("io.micronaut:micronaut-http-validation")
//    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")
    implementation("io.micronaut:micronaut-validation")
    runtimeOnly("io.micronaut:micronaut-http-server-netty")

//    implementation("io.micronaut.data:micronaut-data-processor")

}

//graalvmNative.toolchainDetection = false
micronaut {
    processing {
        incremental(true)
        annotations("io.airbyte.db.repositories.*")
    }
}

application {
    mainClass.set("io.airbyte.public_api.server.Application")
}

tasks.register("prepareKotlinBuildScriptModel"){}
