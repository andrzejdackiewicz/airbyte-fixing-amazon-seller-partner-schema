---
"$schema": http://json-schema.org/draft-07/schema#
"$id": https://github.com/airbytehq/airbyte/blob/master/airbyte-protocol/models/src/main/resources/airbyte_protocol/airbyte_protocol.yaml
title: AirbyteProtocol
type: object
description: AirbyteProtocol structs
properties:
  airbyte_message:
    "$ref": "#/definitions/AirbyteMessage"
  configured_airbyte_catalog:
    "$ref": "#/definitions/ConfiguredAirbyteCatalog"
definitions:
  AirbyteMessage:
    type: object
    additionalProperties: true
    required:
      - type
    properties:
      type:
        description: "Message type"
        type: string
        enum:
          - RECORD
          - STATE
          - LOG
          - SPEC
          - CONNECTION_STATUS
          - CATALOG
      log:
        description: "log message: any kind of logging you want the platform to know about."
        "$ref": "#/definitions/AirbyteLogMessage"
      spec:
        "$ref": "#/definitions/ConnectorSpecification"
      # todo (cgardens) - prefer snake case for field names.
      connectionStatus:
        "$ref": "#/definitions/AirbyteConnectionStatus"
      catalog:
        description: "log message: any kind of logging you want the platform to know about."
        "$ref": "#/definitions/AirbyteCatalog"
      record:
        description: "record message: the record"
        "$ref": "#/definitions/AirbyteRecordMessage"
      state:
        description: "schema message: the state. Must be the last message produced. The platform uses this information"
        "$ref": "#/definitions/AirbyteStateMessage"
  AirbyteRecordMessage:
    type: object
    additionalProperties: true
    required:
      - stream
      - data
      - emitted_at
    properties:
      stream:
        description: "the name of this record's stream"
        type: string
      data:
        description: "the record data"
        type: object
        existingJavaType: com.fasterxml.jackson.databind.JsonNode
      emitted_at:
        description: "when the data was emitted from the source. epoch in millisecond."
        type: integer
      namespace:
        description: "the namespace of this record's stream"
        type: string
  AirbyteStateMessage:
    type: object
    additionalProperties: true
    required:
      - data
    properties:
      data:
        description: "the state data"
        type: object
        existingJavaType: com.fasterxml.jackson.databind.JsonNode
  AirbyteLogMessage:
    type: object
    additionalProperties: true
    required:
      - level
      - message
    properties:
      level:
        description: "the type of logging"
        type: string
        enum:
          - FATAL
          - CRITICAL
          - ERROR
          - WARN
          - WARNING
          - INFO
          - DEBUG
          - TRACE
      message:
        description: "the log message"
        type: string
  AirbyteConnectionStatus:
    description: Airbyte connection status
    type: object
    additionalProperties: true
    required:
      - status
    properties:
      status:
        type: string
        enum:
          - SUCCEEDED
          - FAILED
      message:
        type: string
  AirbyteCatalog:
    description: A collection of each AirbyteStream in a Source.
    type: object
    additionalProperties: true
    required:
      - streams
    properties:
      streams:
        type: array
        items:
          "$ref": "#/definitions/AirbyteStream"
  AirbyteStream:
    description:
      'This struct represents "facts" about the data. It describes the schema and metadata about how the
      data can be synced (e.g. can this stream be replicated incrementally?). It is a "read-only" struct insofar as it
      is describes the data schema, but does not represent any choices the end user has made on how to configure the
      sync. That happens in the ConfiguredAirbyteStream.'
    type: object
    additionalProperties: true
    required:
      - name
      - json_schema
      # todo (cgardens) - make required once sources are migrated
      # - supported_sync_modes
    properties:
      name:
        description: Stream name
        type: string
      json_schema:
        description: The schema of the data in the stream, represented as JSONSchema (https://json-schema.org/)
        type: object
        existingJavaType: com.fasterxml.jackson.databind.JsonNode
      supported_sync_modes:
        description: The sync modes that this stream is compatible with
        type: array
        items:
          "$ref": "#/definitions/SyncMode"
      source_defined_cursor:
        description:
          "If the implementation of the source defines the cursor field, then any other cursor field inputs
          will be ignored. If it does not, either the user-provided one is used, or the default one is used as a backup.
          Reference: https://docs.airbyte.io/understanding-airbyte/catalog#logic-for-resolving-the-cursor-field for
          more information on cursor field logic."
        type: boolean
      default_cursor_field:
        description:
          "Path to the field that will be used to determine if a record is new or modified since the last
          sync. If the user provides a cursor_field or if source_defined_cursor is true, this field will be ignored.
          If source_defined_cursor is false and default_cursor_field is not set, then a user will be required to set
          their own cursor field when trying to replicate this stream incrementally.
          Reference: https://docs.airbyte.io/understanding-airbyte/catalog#logic-for-resolving-the-cursor-field for
          more information on cursor field logic."
        "$ref": "#/definitions/StreamField"
      source_defined_primary_key:
        description:
          If empy or not set, the source does not define the primary key. If this value is non-empty the
          source defines the primary key. Each element in the top-level array refers to a single field in the data--
          this allows for composite primary keys. Each field is then represented by its own array (see the note in
          description of AirbyteStream for more information). If not provided by the source, the end user will have to
          specify the primary key themself.
        type: array
        items:
          "$ref": "#/definitions/StreamField"
      namespace:
        description:
          Optional Source-defined namespace. Use for grouping streams by a namspace. This is primarily used
          by database sources to group tables by schema.
        type: string
  ConfiguredAirbyteCatalog:
    description: A collection of ConfiguredAirbyteStreams for a Connection.
    type: object
    additionalProperties: true
    required:
      - streams
    properties:
      streams:
        type: array
        items:
          "$ref": "#/definitions/ConfiguredAirbyteStream"
  ConfiguredAirbyteStream:
    description:
      'While the AirbyteStream represents "facts" about the data, the ConfiguredAirbyteStream, encapsulates
      the full configuration for "how" the data will be synced. While AirbyteStream told us whether a Stream supported
      incremental replication or not, the ConfiguredAirbyteStream is where we specify whether we will sync the Stream as
      incremental or full refresh. It wraps an AirbyteStream, which it uses as reference.'
    type: object
    additionalProperties: true
    required:
      - stream
      - sync_mode
      - destination_sync_mode
    properties:
      stream:
        description: The stream to which this configuration is being applied
        "$ref": "#/definitions/AirbyteStream"
      sync_mode:
        description: The sync mode that will be used to pull data from the source. (e.g. incremetnal or full refresh)
        "$ref": "#/definitions/SyncMode"
        default: full_refresh
      cursor_field:
        description:
          "Path to the field that will be used to determine if a record is new or modified since the last
          sync. This field is REQUIRED if `sync_mode` is `incremental` and default_cursor_field and
          source_defined_cursor_field are falsey. This field will override default_cursor_field. If
          source_defined_cursor_field is true, this field will be ignored.
          Reference: https://docs.airbyte.io/understanding-airbyte/catalog#logic-for-resolving-the-cursor-field for more
          information on cursor field logic."
        "$ref": "#/definitions/StreamField"
      destination_sync_mode:
        description:
          The sync mode that will be used to write data to the destination. (e.g. append, overwrite,
          append_dedupe)
        "$ref": "#/definitions/DestinationSyncMode"
        default: append
      primary_key:
        description:
          Paths to the fields that will be used as primary key. This field is REQUIRED if
          `destination_sync_mode` is `*_dedup` and source_defined_primary_key is not set. Otherwise it is ignored.
        type: array
        items:
          "$ref": "#/definitions/StreamField"
  StreamField:
    description:
      'All fields in this struct that refer to a field in the data schema are represented as arrays. This is
      because each describes a path into the data. e.g. if the data looks like { "a": { "b": "c" } } and b was the
      field we wanted to reference, we would do so as: [ "a", "b" ].'
    type: array
    items:
      type: string
  SyncMode:
    type: string
    enum:
      - full_refresh
      - incremental
  DestinationSyncMode:
    type: string
    enum:
      - append
      - overwrite
      #- upsert_dedup # TODO chris: SCD Type 1 can be implemented later
      - append_dedup # SCD Type 1 & 2
  OAuth2Specification:
    description: An object containing any metadata needed to describe this connector's Oauth flow
    type: object
    additionalProperties: true
    properties:
      rootObject:
        description:
          "A list of strings representing a pointer to the root object which contains any oauth parameters in the ConnectorSpecification.

          Examples:

          if oauth parameters were contained inside the top level, rootObject=[]
          If they were nested inside another object {'credentials': {'app_id' etc...}, rootObject=['credentials']
          If they were inside a oneOf {'switch': {oneOf: [{client_id...}, {non_oauth_param]}},  rootObject=['switch', 0]
          "
        "$ref": "#/definitions/StreamField"
      oauthFlowInitParameters:
        description:
          "Pointers to the fields in the rootObject needed to obtain the initial refresh/access tokens for the OAuth flow.
          Each inner array represents the path in the rootObject of the referenced field.
          For example.
          Assume the rootObject contains params 'app_secret', 'app_id' which are needed to get the initial refresh token.
          If they are not nested in the rootObject, then the array would look like this [['app_secret'], ['app_id']]
          If they are nested inside an object called 'auth_params' then this array would be [['auth_params', 'app_secret'], ['auth_params', 'app_id']]"
        type: array
        items:
          description: A list of strings denoting a pointer into the rootObject for where to find this property
          "$ref": "#/definitions/StreamField"
      oauthFlowOutputParameters:
        description:
          "Pointers to the fields in the rootObject which can be populated from successfully completing the oauth flow using the init parameters.
          This is typically a refresh/access token.
          Each inner array represents the path in the rootObject of the referenced field."
        type: array
        items:
          description: A list of strings denoting a pointer into the rootObject for where to find this property
          "$ref": "#/definitions/StreamField"
  ConnectorSpecification:
    description: Specification of a connector (source/destination)
    type: object
    required:
      - connectionSpecification
    additionalProperties: true
    properties:
      # todo - split ConnectorSpecification into general vs connector type sections of properties
      # General Properties (Common to all connectors)
      # todo (cgardens) - prefer snake case for field names.
      documentationUrl:
        type: string
        format: uri
      # todo (cgardens) - prefer snake case for field names.
      changelogUrl:
        type: string
        format: uri
      # todo (cgardens) - prefer snake case for field names.
      connectionSpecification:
        description: ConnectorDefinition specific blob. Must be a valid JSON string.
        type: object
        existingJavaType: com.fasterxml.jackson.databind.JsonNode
      # Connector Type Properties (Common to all connectors from same type)
      # Source Connectors Properties
      supportsIncremental:
        description: If the connector supports incremental mode or not.
        type: boolean
      # Destination Connectors Properties
      # Normalization is currently implemented using dbt so it requires `supportsDBT` to be true for this to be true.
      supportsNormalization:
        description: If the connector supports normalization or not.
        type: boolean
        default: false
      supportsDBT:
        description: If the connector supports DBT or not.
        type: boolean
        default: false
      supported_destination_sync_modes:
        description: List of destination sync modes supported by the connector
        type: array
        items:
          "$ref": "#/definitions/DestinationSyncMode"
      authSpecification:
        type: object
        properties:
          auth_type:
            type: string
            enum: ["oauth2.0"] # Future auth types should be added here
          oauth2Specification:
            description: If the connector supports OAuth, this field should be non-null.
            "$ref": "#/definitions/OAuth2Specification"
